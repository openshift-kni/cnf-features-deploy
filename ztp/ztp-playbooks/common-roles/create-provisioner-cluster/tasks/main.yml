---
- name: Enable Copr repository
  command:
      cmd: dnf copr enable -y karmab/kcli 
      creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:karmab:kcli.repo
        
- name: Install kcli package
  yum:
    name:
      - kcli
    state: latest

- name: Configure ipv6 sysctl settings
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: 2
    state: present

- name: Delete cluster if already existed
  shell: "kcli delete cluster -y {{ provisioner_cluster_name }}"

- name: Create default pool if not already exists
  shell: "kcli create pool default -p {{ provisioner_cluster_libvirt_pool | default('/var/lib/libvirt/images') }}"
  ignore_errors: true

- name: Create ipv6 network for the cluster domain
  shell: "kcli create network -c {{ provisioner_ipv6_range }} --domain {{ provisioner_cluster_name }}.{{ provisioner_cluster_domain }} {{ provisioner_cluster_name }}"

- name: Create default network for vms
  shell: "kcli create network -c {{ default_libvirt_range }} --domain default default"

- name: Create temporary dir for hosting kcli artifacts
  file:
    path: "{{ temporary_path }}/kcli_{{ provisioner_cluster_name }}"
    state: directory
    mode: '0755'

- name: Copy the kcli template
  template:
    src: "{{ role_path }}/templates/kcli_parameters.yaml.j2"
    dest: "{{ temporary_path }}/kcli_{{ provisioner_cluster_name }}/kcli_parameters.yaml"

- name: Copy pull secret to the same directory
  copy:
    content: "{{ pull_secret }}"
    dest: "{{ temporary_path }}/kcli_{{ provisioner_cluster_name }}/openshift_pull.json"

- name: Download centos8 image
  shell: kcli download image centos8
  args:
    chdir: "{{ temporary_path }}/kcli_{{ provisioner_cluster_name }}"

- name: And deploy the cluster
  ansible.builtin.shell:
    cmd: "kcli create kube openshift --paramfile {{ temporary_path }}//kcli_{{ provisioner_cluster_name }}/kcli_parameters.yaml --force {{ provisioner_cluster_name }}"
    chdir: "{{ temporary_path }}/kcli_{{ provisioner_cluster_name }}"

- name: Get IP of the registry vm
  shell: "kcli info vm {{ provisioner_cluster_name }}-disconnecter -f ip -v"
  register: disconnecter_vm

- name: And add entry into /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "^(.*) {{ provisioner_cluster_name }}-disconnecter.{{ provisioner_cluster_name }}.{{ provisioner_cluster_domain }}$"
    line: "{{ disconnecter_vm.stdout }} {{ provisioner_cluster_name }}-disconnecter.{{ provisioner_cluster_name }}.{{ provisioner_cluster_domain }}"

- name: Copy certificate to trusted certs path
  shell: "kcli scp root@{{ provisioner_cluster_name }}-disconnecter:/opt/registry/certs/domain.crt /etc/pki/ca-trust/source/anchors/"

- name: Update ca trust
  shell: "update-ca-trust"

