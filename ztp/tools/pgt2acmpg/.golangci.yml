linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 65
    statements: 45
  gci:
    prefixes: github.com/golangci/golangci-lint
  goconst:
    min-len: 4
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - whyNoLint
  gocyclo:
    min-complexity: 20
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  mnd:
    settings:
      mnd:
        # do not include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    shadow: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 250
  maligned:
    suggest-new: true
  nolintlint:
    allow-leading-space: false # disallow leading spaces. A space means the //nolint comment shows in `godoc` output.
    allow-unused: false # report any unused nolint directives
    require-explanation: false # do not require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
  exhaustive:
    default-signifies-exhaustive: true
linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  gci:
  enable:
    - bodyclose
    - dogsled
    - errcheck
    - exhaustive
    - exportloopref
    - funlen
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - mnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nolintlint
    - revive
    - rowserrcheck
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace
  # do not enable:
  # - asciicheck
  # - depguard
  # - dupl
  # - gochecknoglobals
  # - gochecknoinits
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - maligned
  # - nakedret
  # - nestif
  # - noctx
  # - prealloc
  # - exportloopref
  # - structcheck
  # - testpackage
  # - wsl
issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Ignore magic numbers, inline strings and function length in tests.
    - path: _test\.go
      linters:
        - mnd
        - goconst
        - funlen
    # Ignore line length for string assignments (do not try and wrap regex definitions)
    - linters:
        - lll
      source: '^(.*= (".*"|`.*`))$'
    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
    # Ignore static strings in tests

# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
service:
  golangci-lint-version: 1.55.x # use the fixed version to not introduce new linters unexpectedly
  prepare:
    - echo "here I can run custom commands, but no preparation needed for this repo"
