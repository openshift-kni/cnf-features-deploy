apiVersion: siteconfig.open-cluster-management.io/v1alpha1
kind: ClusterInstance
metadata:
  name: example-sno
  namespace: example-sno
spec:
  additionalNTPSources:
  - 1111:2222:3333:4444::2
  baseDomain: example.com
  clusterImageSetNameRef: openshift-4.16
  clusterName: example-sno
  clusterNetwork:
  - cidr: 1001:1::/48
    hostPrefix: 64
  clusterType: sno
  cpuPartitioningMode: AllNodes
  diskEncryption: {}
  extraLabels:
    ManagedCluster:
      common: "true"
      du-profile: latest
      group-du-sno: ""
      sites: example-sno
  installConfigOverrides: '{"capabilities":{"additionalEnabledCapabilities":["NodeTuning","OperatorLifecycleManager","Ingress"],"baselineCapabilitySet":"None"},"cpuPartitioningMode":"AllNodes"}'
  machineNetwork:
  - cidr: 1111:2222:3333:4444::/64
  networkType: OVNKubernetes
  nodes:
  - automatedCleaningMode: disabled
    bmcAddress: idrac-virtualmedia+https://[1111:2222:3333:4444::bbbb:1]/redfish/v1/Systems/System.Embedded.1
    bmcCredentialsName:
      name: example-node1-bmh-secret
    bootMACAddress: AA:BB:CC:DD:EE:11
    bootMode: UEFISecureBoot
    hostName: example-node1.example.com
    ignitionConfigOverride: |
      {
        "ignition": {
          "version": "3.2.0"
        },
        "storage": {
          "disks": [
            {
              "device": "/dev/disk/by-id/wwn-0x6b07b250ebb9d0002a33509f24af1f62",
              "partitions": [
                {
                  "label": "var-lib-containers",
                  "sizeMiB": 0,
                  "startMiB": 250000
                }
              ],
              "wipeTable": false
            }
          ],
          "filesystems": [
            {
              "device": "/dev/disk/by-partlabel/var-lib-containers",
              "format": "xfs",
              "mountOptions": [
                "defaults",
                "prjquota"
              ],
              "path": "/var/lib/containers",
              "wipeFilesystem": true
            }
          ]
        },
        "systemd": {
          "units": [
            {
              "contents": "# Generated by Butane\n[Unit]\nRequires=systemd-fsck@dev-disk-by\\x2dpartlabel-var\\x2dlib\\x2dcontainers.service\nAfter=systemd-fsck@dev-disk-by\\x2dpartlabel-var\\x2dlib\\x2dcontainers.service\n\n[Mount]\nWhere=/var/lib/containers\nWhat=/dev/disk/by-partlabel/var-lib-containers\nType=xfs\nOptions=defaults,prjquota\n\n[Install]\nRequiredBy=local-fs.target",
              "enabled": true,
              "name": "var-lib-containers.mount"
            }
          ]
        }
      }
    ironicInspect: enabled
    nodeNetwork:
      config:
        dns-resolver:
          config:
            search:
            - example.com
            server:
            - 1111:2222:3333:4444::2
        interfaces:
        - ipv4:
            enabled: false
          ipv6:
            address:
            - ip: 1111:2222:3333:4444::aaaa:1
              prefix-length: 64
            enabled: true
          name: eno1
          state: up
          type: ethernet
        routes:
          config:
          - destination: ::/0
            next-hop-address: 1111:2222:3333:4444::1
            next-hop-interface: eno1
            table-id: 254
      interfaces:
      - macAddress: AA:BB:CC:DD:EE:11
        name: eno1
    role: master
    rootDeviceHints:
      deviceName: /dev/disk/by-path/pci-0000:01:00.0-scsi-0:2:0:0
    templateRefs:
    - name: ai-nodes-templates-v1
      namespace: siteconfig-operator
  proxy: {}
  pullSecretRef:
    name: assisted-deployment-pull-secret
  serviceNetwork:
  - cidr: 1001:2::/112
  sshPublicKey: ssh-rsa AAAA...
  templateRefs:
  - name: ai-cluster-templates-v1
    namespace: siteconfig-operator

