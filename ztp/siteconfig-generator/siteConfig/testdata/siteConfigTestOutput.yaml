---
apiVersion: v1
kind: Namespace
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "0"
        ran.openshift.io/ztp-gitops-generated: '{}'
    labels:
        name: cluster1
    name: cluster1
---
apiVersion: extensions.hive.openshift.io/v1beta1
kind: AgentClusterInstall
metadata:
    annotations:
        agent-install.openshift.io/install-config-overrides: '{"networking":{"networkType":"OVNKubernetes"}}'
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: cluster1
    namespace: cluster1
spec:
    clusterDeploymentRef:
        name: cluster1
    imageSetRef:
        name: openshift-v4.8.0
    manifestsConfigMapRef:
        name: cluster1
    networking:
        clusterNetwork:
            - cidr: 10.128.0.0/14
              hostPrefix: 23
        machineNetwork:
            - cidr: 10.16.231.0/24
        serviceNetwork:
            - 172.30.0.0/16
    provisionRequirements:
        controlPlaneAgents: 1
    sshPublicKey: 'ssh-rsa '
---
apiVersion: hive.openshift.io/v1
kind: ClusterDeployment
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: cluster1
    namespace: cluster1
spec:
    baseDomain: example.com
    clusterInstallRef:
        group: extensions.hive.openshift.io
        kind: AgentClusterInstall
        name: cluster1
        version: v1beta1
    clusterName: cluster1
    platform:
        agentBareMetal:
            agentSelector:
                matchLabels:
                    cluster-name: cluster1
    pullSecretRef:
        name: pullSecretName
---
apiVersion: agent-install.openshift.io/v1beta1
kind: NMStateConfig
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    labels:
        nmstate-label: cluster1
    name: node1
    namespace: cluster1
spec:
    config:
        interfaces:
            - ipv4:
                dhcp: false
                enabled: true
              macAddress: "00:00:00:01:20:30"
              name: eno1
              type: ethernet
    interfaces:
        - name: eno1
          macAddress: "00:00:00:01:20:30"
---
apiVersion: agent-install.openshift.io/v1beta1
kind: InfraEnv
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: cluster1
    namespace: cluster1
spec:
    additionalNTPSources:
        - NTP.server1
        - 10.16.231.22
    clusterRef:
        name: cluster1
        namespace: cluster1
    nmStateConfigLabelSelector:
        matchLabels:
            nmstate-label: cluster1
    pullSecretRef:
        name: pullSecretName
    sshAuthorizedKey: 'ssh-rsa '
---
apiVersion: metal3.io/v1alpha1
kind: BareMetalHost
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        bmac.agent-install.openshift.io/hostname: node1
        bmac.agent-install.openshift.io/role: master
        inspect.metal3.io: disabled
        ran.openshift.io/ztp-gitops-generated: '{}'
    labels:
        infraenvs.agent-install.openshift.io: cluster1
    name: node1
    namespace: cluster1
spec:
    automatedCleaningMode: disabled
    bmc:
        address: idrac-virtualmedia+https://1.2.3.4/redfish/v1/Systems/System.Embedded.1
        credentialsName: name of bmcCredentials secret
        disableCertificateVerification: true
    bootMACAddress: "00:00:00:01:20:30"
    bootMode: UEFI
    online: true
    rootDeviceHints:
        hctl: "1:2:0:0"
---
apiVersion: metal3.io/v1alpha1
kind: HostFirmwareSettings
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: node1
    namespace: cluster1
spec:
    settings:
        BootMode: Uefi
        BootOrderPolicy: RetryIndefinitely
        ProcHyperthreading: Enabled
        ProcVirtualization: Enabled
        UefiOptimizedBoot: Enabled
        UefiSerialDebugLevel: Disabled
---
apiVersion: v1
data:
    03-master-workload-partitioning.yaml: |
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfig
        metadata:
            annotations:
                ran.openshift.io/ztp-gitops-generated: '{}'
            labels:
                machineconfiguration.openshift.io/role: master
            name: 02-master-workload-partitioning
        spec:
            config:
                ignition:
                    version: 3.2.0
                storage:
                    files:
                        - contents:
                            source: data:text/plain;charset=utf-8;base64,W2NyaW8ucnVudGltZS53b3JrbG9hZHMubWFuYWdlbWVudF0KYWN0aXZhdGlvbl9hbm5vdGF0aW9uID0gInRhcmdldC53b3JrbG9hZC5vcGVuc2hpZnQuaW8vbWFuYWdlbWVudCIKYW5ub3RhdGlvbl9wcmVmaXggPSAicmVzb3VyY2VzLndvcmtsb2FkLm9wZW5zaGlmdC5pbyIKcmVzb3VyY2VzID0geyAiY3B1c2hhcmVzIiA9IDAsICJjcHVzZXQiID0gIjItMTksMjItMzkiIH0K
                          mode: 420
                          overwrite: true
                          path: /etc/crio/crio.conf.d/01-workload-partitioning
                          user:
                            name: root
                        - contents:
                            source: data:text/plain;charset=utf-8;base64,ewogICJtYW5hZ2VtZW50IjogewogICAgImNwdXNldCI6ICIyLTE5LDIyLTM5IgogIH0KfQo=
                          mode: 420
                          overwrite: true
                          path: /etc/kubernetes/openshift-workload-pinning
                          user:
                            name: root
    master-image-registry-partition-mc.yaml: |
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfig
        metadata:
            annotations:
                ran.openshift.io/ztp-gitops-generated: '{}'
            labels:
                machineconfiguration.openshift.io/role: master
            name: 98-var-imageregistry-partition-master
        spec:
            config:
                ignition:
                    version: 3.2.0
                storage:
                    disks:
                        - device: /dev/sda
                          partitions:
                            - label: var-imageregistry
                              sizeMiB: 102500
                              startMiB: 344844
                          wipeTable: false
                    filesystems:
                        - device: /dev/disk/by-partlabel/var-imageregistry
                          format: xfs
                          path: /var/imageregistry
                systemd:
                    units:
                        - contents: |
                            [Unit]
                            Before=local-fs.target
                            [Mount]
                            Where=/var/imageregistry
                            What=/dev/disk/by-partlabel/var-imageregistry
                            [Install]
                            WantedBy=local-fs.target
                          enabled: true
                          name: var-imageregistry.mount
    predefined-extra-manifests-master.yaml: |
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfig
        metadata:
            annotations:
                ran.openshift.io/ztp-gitops-generated: '{}'
            labels:
                machineconfiguration.openshift.io/role: master
            name: predefined-extra-manifests-master
        spec:
            config:
                ignition:
                    version: 3.2.0
                storage:
                    files:
                        - contents:
                            source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKZWNobyAiRm9vYmFyISIgPiBmb29iYXIuY29uZg==
                          mode: 493
                          path: /usr/local/bin/foobar.sh
                systemd:
                    units:
                        - contents: |
                            [Unit]
                            Description=Runs a simple shell script for test purposes

                            [Service]
                            Type=simple
                            ExecStart=/usr/local/bin/foobar.sh
                          enabled: true
                          name: foobar.service
            kernelType: default
    predefined-extra-manifests-worker.yaml: |
        apiVersion: machineconfiguration.openshift.io/v1
        kind: MachineConfig
        metadata:
            annotations:
                ran.openshift.io/ztp-gitops-generated: '{}'
            labels:
                machineconfiguration.openshift.io/role: worker
            name: predefined-extra-manifests-worker
        spec:
            config:
                ignition:
                    version: 3.2.0
                storage:
                    files:
                        - contents:
                            source: data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKZWNobyAiRm9vYmFyISIgPiBmb29iYXIuY29uZg==
                          mode: 493
                          path: /usr/local/bin/foobar.sh
                systemd:
                    units:
                        - contents: |
                            [Unit]
                            Description=Runs a simple shell script for test purposes

                            [Service]
                            Type=simple
                            ExecStart=/usr/local/bin/foobar.sh
                          enabled: true
                          name: foobar.service
            kernelType: default
kind: ConfigMap
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "1"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: cluster1
    namespace: cluster1
---
apiVersion: cluster.open-cluster-management.io/v1
kind: ManagedCluster
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "2"
        ran.openshift.io/ztp-gitops-generated: '{}'
    labels:
        common: "true"
        group-du-sno: ""
        sites: test-site
    name: cluster1
spec:
    hubAcceptsClient: true
---
apiVersion: agent.open-cluster-management.io/v1
kind: KlusterletAddonConfig
metadata:
    annotations:
        argocd.argoproj.io/sync-wave: "2"
        ran.openshift.io/ztp-gitops-generated: '{}'
    name: cluster1
    namespace: cluster1
spec:
    applicationManager:
        enabled: false
    certPolicyController:
        enabled: false
    clusterLabels:
        cloud: auto-detect
        vendor: auto-detect
    clusterName: cluster1
    clusterNamespace: cluster1
    iamPolicyController:
        enabled: false
    policyController:
        enabled: true
    searchCollector:
        enabled: false
