<?xml version="1.0" encoding="UTF-8"?>
  <testsuite name="CNF Features e2e integration tests" tests="1" failures="1" errors="0" time="92.619">
      <testcase name="sctp Negative - Sctp disabled Client Server Connection Should NOT start a server pod" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Kernel Module is loaded" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Custom namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Default namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Custom namespace with policy" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Custom namespace with policy no port" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Default namespace with policy" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Connectivity Test Default namespace with policy no port" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server Should connect a client pod to a server pod. Feature LatencySensitive Active" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server connect a client pod to a server pod via Service ClusterIP Custom namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server connect a client pod to a server pod via Service ClusterIP Default namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server connect a client pod to a server pod via Service Node Port Custom namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="sctp Test Connectivity Connectivity between client and server connect a client pod to a server pod via Service Node Port Default namespace" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should be able to add metadata info(labels/annotations)" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should avoid mutating existing metadata info(labels/annotations)" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should apply mutations by order" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should be able to update mutation policy" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should not apply mutations policies after deletion" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper mutation should be able to match by any match category" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="gatekeeper operator should be able to select mutation namespaces" classname="CNF Features e2e integration tests" time="62.086691226">
          <failure type="Failure">/home/mmirecki/go/src/github.com/mmirecki/cnf-features-deploy/cnf-tests/testsuites/e2esuite/gatekeeper/gatekeeper.go:699&#xA;Timed out after 60.000s.&#xA;Expected&#xA;    &lt;bool&gt;: false&#xA;to be true&#xA;/home/mmirecki/go/src/github.com/mmirecki/cnf-features-deploy/cnf-tests/testsuites/e2esuite/gatekeeper/gatekeeper.go:746</failure>
          <system-out>�[1mSTEP�[0m: Adding namespace selector to gatekeeper operator config&#xA;</system-out>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Performance Operator [test_id:38109] Should run on the control plane nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Performance Operator [test_id:44885] Should have CPU and Memory requests but not limits - BZ 1957291" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Tuned CRs generated from profile [test_id:31748] Should have the expected name for tuned from the profile owner object" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Tuned CRs generated from profile [test_id:37127] Node should point to right tuned profile" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:31198] Should set CPU affinity kernel argument" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:32702] Should set CPU isolcpu&#39;s kernel argument managed_irq flag" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:27081][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Should set workqueue CPU mask" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:32375][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] initramfs should not have injected configuration" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:35363][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] stalld daemon is running on the host" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:42400][crit:medium][vendor:cnf-qe@redhat.com][level:acceptance] stalld daemon is running as sched_fifo" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Pre boot tuning adjusted by tuned  [test_id:42696][crit:medium][vendor:cnf-qe@redhat.com][level:acceptance] Stalld runs in higher priority than ksoftirq and rcu{c,b}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Additional kernel arguments added from perfomance profile [test_id:28611][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Should set additional kernel arguments on the machine" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Tuned kernel parameters [test_id:28466][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Should contain configuration injected through openshift-node-performance profile" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] RPS configuration Should have the correct RPS configuration" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Network latency parameters adjusted by the Node Tuning Operator [test_id:28467][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Should contain configuration injected through the openshift-node-performance profile" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Create second performance profiles on a cluster [test_id:32364] Verifies that cluster can have multiple profiles" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions  when the GloballyDisableIrqLoadBalancing field set to false should preserve the value during the v1 &lt;-&gt; v2 conversion" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions  when the GloballyDisableIrqLoadBalancing field set to true should preserve the value during the v1 &lt;-&gt; v2 conversion" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions when the performance profile does not contain NUMA field Verifies v1 &lt;-&gt; v1alpha1 conversions" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions when the performance profile does not contain NUMA field Verifies v1 &lt;-&gt; v2 conversions" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions [test_id:35887] Verifies v1 &lt;-&gt; v1alpha1 conversions" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Verify API Conversions [test_id:35888] Verifies v1 &lt;-&gt; v2 conversions" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1alpha1 profile should reject the creation of the profile with overlapping CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1alpha1 profile should reject the creation of the profile with no isolated CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1alpha1 profile should reject the creation of the profile with the node selector that already in use" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1 profile should reject the creation of the profile with overlapping CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1 profile should reject the creation of the profile with no isolated CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with API version v1 profile should reject the creation of the profile with the node selector that already in use" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with profile version v2 should reject the creation of the profile with overlapping CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with profile version v2 should reject the creation of the profile with no isolated CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27368][performance] Validation webhook with profile version v2 should reject the creation of the profile with the node selector that already in use" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="xt_u32 Negative - xt_u32 disabled Should NOT create an iptable rule" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="xt_u32 Validate the module is enabled and works Should create an iptables rule inside a pod that has the module enabled" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] VRF integration  Integration: SRIOV, IPAM: static, Interfaces: 1, Scheme: 2 Pods 2 VRFs OCP Primary network overlap {&#34;IPStack&#34;:&#34;ipv4&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27350][performance]Topology Manager [test_id:26932][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] should be enabled with the policy specified in profile" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate the build Should forward and receive packets from a pod running dpdk base on a image created by building config" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate a DPDK workload running inside a pod Should forward and receive packets" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate NUMA aliment should allocate the requested number of cpus" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate NUMA aliment should allocate all the resources on the same NUMA node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate HugePages should allocate the amount of hugepages requested" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS allocated for dpdk Validate HugePages SeLinux access should allow to remove the hugepage file inside the pod" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS split for dpdk and netdevice should forward and receive packets from a pod running dpdk base" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk VFS split for dpdk and netdevice Run a regular pod using a vf shared with the dpdk&#39;s pf" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk dpdk application on different vendors Test connectivity using the requested nic Failed getting supported SR-IOV nics" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk Downward API Volume is readable in container" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="dpdk restoring configuration should restore the cluster to the original status" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="fec Expose resource on the node should show resources under the node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[vrf]  Integration: NAD, IPAM: static, Interfaces: 1, Scheme: 2 Pods 2 VRFs OCP Primary network overlap {&#34;IPStack&#34;:&#34;ipv4&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator No SriovNetworkNodePolicy SR-IOV network config daemon can be set by nodeselector Should schedule the config daemon on selected nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy Resource Injector Should inject downward api volume with no labels present" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy Resource Injector Should inject downward api volume with labels present" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy VF flags Should configure the spoofChk boolean variable" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy VF flags Should configure the trust boolean variable" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy VF flags Should configure the the link state variable" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy VF flags rate limit Should configure the requested rate limit flags under the vf" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy VF flags vlan and Qos vlan Should configure the requested vlan and Qos vlan flags under the vf" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy Multiple sriov device and attachment Should configure multiple network attachments" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy IPv6 configured secondary interfaces on pods should be able to ping each other" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy NAD update NAD is updated when SriovNetwork spec/networkNamespace is changed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy NAD update NAD default gateway is updated when SriovNetwork ipam is changed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy SRIOV and macvlan Should be able to create a pod with both sriov and macvlan interfaces" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy Meta Plugin Configuration Should be able to configure a metaplugin" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Generic SriovNetworkNodePolicy Virtual Functions should release the VFs once the pod deleted and same VFs can be used by the new created pods" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration Create vfio-pci node policy Should be possible to create a vfio-pci resource" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration PF Partitioning Should be possible to partition the pf&#39;s vfs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration PF Partitioning Should not be possible to have overlapping pf ranges" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration Main PF should work when vfs are used by pods" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration PF shutdown Should be able to create pods successfully if PF is down.Pods are able to communicate with each other on the same node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Configuration MTU Should support jumbo frames" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Nic Validation Test connectivity using the requested nic Intel Corporation Ethernet Controller XXV710 for 25GbE SFP28" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Nic Validation Test connectivity using the requested nic Ethernet Controller XXV710 Intel(R) FPGA Programmable Acceleration Card N3000 for Networking" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Resource Injector SR-IOV Operator Config, disable Network resource injector" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] operator Custom SriovNetworkNodePolicy Resource Injector SR-IOV Operator Config, disable Webhook resource injector" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP configuration verifications Should check whether PTP operator appropriate resource exists" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP configuration verifications Should check that all nodes are running at least one replica of linuxptp-daemon" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP configuration verifications Should check that operator is deployed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP Interfaces discovery The interfaces support ptp can be discovered correctly" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP Interfaces discovery The virtual interfaces should be not discovered by ptp" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP Interfaces discovery PTP daemon apply match rule based on nodeLabel" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP Interfaces discovery Slave can sync to master" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP Interfaces discovery Can provide a profile with higher priority" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ptp] PTP e2e tests PTP metric is present on slave" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sriov] SCTP integration Test Connectivity Connectivity between client and server Should work over a SR-IOV device" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance]Hugepages [rfe_id:27369]when NUMA node specified [test_id:27752][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] should be allocated on the specifed NUMA node " classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance]Hugepages with multiple sizes [test_id:34080] should be supported and available for the container usage" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance]Hugepages [rfe_id:27354]Huge pages support for container workloads [test_id:27477][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Huge pages support for container workloads" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance] Latency Test with the oslat image should succeed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance] Latency Test with the cyclictest image should succeed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance] Latency Test with the hwlatdetect image should succeed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb MetalLB deploy should have MetalLB pods in running state" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb Creating AddressPool Testing creating addresspool CR successfully Test AddressPool object with default auto assign" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb Creating AddressPool Testing creating addresspool CR successfully Test AddressPool object with auto assign set to false" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb MetalLB contains incorrect data MetalLB has incorrect name should not be reconciled" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb MetalLB contains incorrect data Correct and incorrect MetalLB resources coexist should have correct statuses" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb Testing create/delete Multiple AddressPools should have created, merged and deleted resources correctly" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="metallb Testing Update AddressPool should have created, update and finally delete addresspool correctly" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ptp Test Offset PTP configuration verifications PTP time diff between Grandmaster and Slave should be in range -100ms and 100ms" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ptp PTP socket sharing between pods Negative - run pmc in a new unprivileged pod on the slave node Should not be able to use the uds" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ptp PTP socket sharing between pods Run pmc in a new pod on the slave node Should be able to sync using a uds" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ptp prometheus Metrics reported by PTP pods Should all be reported by prometheus" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Validate MCO applied egress MachineConfig on the relevant nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;SDN Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;Host Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;Host Pod to Host Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Test limitations are not applied within the same node {&#34;Connectivity&#34;:&#34;SDN Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Test limitations are not applied within the same node {&#34;Connectivity&#34;:&#34;Host Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_egress validate egress QoS limitation Validate MCO removed egress MachineConfig and disabled QOS limitation on the relevant nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Validate MCO applied ingress MachineConfig on the relevant nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;SDN Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;Host Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Test limitations are correctly applied {&#34;Connectivity&#34;:&#34;Host Pod to Host Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Test limitations are not applied within the same node {&#34;Connectivity&#34;:&#34;SDN Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Test limitations are not applied within the same node {&#34;Connectivity&#34;:&#34;Host Pod to SDN Pod&#34;}" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="ovs_qos ovs_qos_ingress validate ingress QoS limitation Validate MCO removed ingress MachineConfig and disabled QOS limitation on the relevant nodes" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ref_id: 40307][pao]Resizing Network Queues Updating performance profile for netqueues [test_id:40308][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Network device queues Should be set to the profile&#39;s reserved CPUs count " classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ref_id: 40307][pao]Resizing Network Queues Updating performance profile for netqueues [test_id:40542] Verify the number of network queues of all supported network interfaces are equal to reserved cpus count" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ref_id: 40307][pao]Resizing Network Queues Updating performance profile for netqueues [test_id:40543] Add interfaceName and verify the interface netqueues are equal to reserved cpus count." classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ref_id: 40307][pao]Resizing Network Queues Updating performance profile for netqueues [test_id:40545] Verify reserved cpus count is applied to specific supported networking devices using wildcard matches" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[ref_id: 40307][pao]Resizing Network Queues Updating performance profile for netqueues [test_id:40668] Verify reserved cpu count is added to networking devices matched with vendor and Device id" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification of configuration on the worker node [test_id:28528][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Verify CPU reservation on the node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification of configuration on the worker node [test_id:37862][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] Verify CPU affinity mask, CPU reservation and CPU isolation on worker node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification of configuration on the worker node [test_id:34358] Verify rcu_nocbs kernel argument on the node" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification of cpu manager functionality Verify CPU usage by stress PODs [test_id:37860] Non-guaranteed POD can work on any CPU" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification of cpu manager functionality Verify CPU usage by stress PODs [test_id:27492] Guaranteed POD should work on isolated cpu" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management when pod runs with the CPU load balancing runtime class [test_id:32646] should disable CPU load balancing for CPU&#39;s used by the pod" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management Verification that IRQ load balance can be disabled per POD [test_id:36364] should disable IRQ balance for CPU where POD is running" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[rfe_id:27363][performance] CPU Management when reserved CPUs specified should run infra containers on reserved CPUs" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance]RT Kernel [test_id:26861][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] should have RT kernel enabled" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[performance]RT Kernel [test_id:28526][crit:high][vendor:cnf-qe@redhat.com][level:acceptance] a node without performance profile applied should not have RT kernel installed" classname="CNF Features e2e integration tests" time="0">
          <skipped></skipped>
      </testcase>
  </testsuite>