// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FortvilleMAC) DeepCopyInto(out *FortvilleMAC) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FortvilleMAC.
func (in *FortvilleMAC) DeepCopy() *FortvilleMAC {
	if in == nil {
		return nil
	}
	out := new(FortvilleMAC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FortvilleStatus) DeepCopyInto(out *FortvilleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FortvilleStatus.
func (in *FortvilleStatus) DeepCopy() *FortvilleStatus {
	if in == nil {
		return nil
	}
	out := new(FortvilleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000Cluster) DeepCopyInto(out *N3000Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000Cluster.
func (in *N3000Cluster) DeepCopy() *N3000Cluster {
	if in == nil {
		return nil
	}
	out := new(N3000Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *N3000Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000ClusterList) DeepCopyInto(out *N3000ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]N3000Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000ClusterList.
func (in *N3000ClusterList) DeepCopy() *N3000ClusterList {
	if in == nil {
		return nil
	}
	out := new(N3000ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *N3000ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000ClusterNode) DeepCopyInto(out *N3000ClusterNode) {
	*out = *in
	if in.FPGA != nil {
		in, out := &in.FPGA, &out.FPGA
		*out = make([]N3000Fpga, len(*in))
		copy(*out, *in)
	}
	if in.Fortville != nil {
		in, out := &in.Fortville, &out.Fortville
		*out = new(N3000Fortville)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000ClusterNode.
func (in *N3000ClusterNode) DeepCopy() *N3000ClusterNode {
	if in == nil {
		return nil
	}
	out := new(N3000ClusterNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000ClusterSpec) DeepCopyInto(out *N3000ClusterSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]N3000ClusterNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000ClusterSpec.
func (in *N3000ClusterSpec) DeepCopy() *N3000ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(N3000ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000ClusterStatus) DeepCopyInto(out *N3000ClusterStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000ClusterStatus.
func (in *N3000ClusterStatus) DeepCopy() *N3000ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(N3000ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000Fortville) DeepCopyInto(out *N3000Fortville) {
	*out = *in
	if in.MACs != nil {
		in, out := &in.MACs, &out.MACs
		*out = make([]FortvilleMAC, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000Fortville.
func (in *N3000Fortville) DeepCopy() *N3000Fortville {
	if in == nil {
		return nil
	}
	out := new(N3000Fortville)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000FortvilleStatus) DeepCopyInto(out *N3000FortvilleStatus) {
	*out = *in
	if in.NICs != nil {
		in, out := &in.NICs, &out.NICs
		*out = make([]FortvilleStatus, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000FortvilleStatus.
func (in *N3000FortvilleStatus) DeepCopy() *N3000FortvilleStatus {
	if in == nil {
		return nil
	}
	out := new(N3000FortvilleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000FortvilleStatusModules) DeepCopyInto(out *N3000FortvilleStatusModules) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000FortvilleStatusModules.
func (in *N3000FortvilleStatusModules) DeepCopy() *N3000FortvilleStatusModules {
	if in == nil {
		return nil
	}
	out := new(N3000FortvilleStatusModules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000Fpga) DeepCopyInto(out *N3000Fpga) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000Fpga.
func (in *N3000Fpga) DeepCopy() *N3000Fpga {
	if in == nil {
		return nil
	}
	out := new(N3000Fpga)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000FpgaStatus) DeepCopyInto(out *N3000FpgaStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000FpgaStatus.
func (in *N3000FpgaStatus) DeepCopy() *N3000FpgaStatus {
	if in == nil {
		return nil
	}
	out := new(N3000FpgaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000Node) DeepCopyInto(out *N3000Node) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000Node.
func (in *N3000Node) DeepCopy() *N3000Node {
	if in == nil {
		return nil
	}
	out := new(N3000Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *N3000Node) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000NodeList) DeepCopyInto(out *N3000NodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]N3000Node, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000NodeList.
func (in *N3000NodeList) DeepCopy() *N3000NodeList {
	if in == nil {
		return nil
	}
	out := new(N3000NodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *N3000NodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000NodeSpec) DeepCopyInto(out *N3000NodeSpec) {
	*out = *in
	if in.FPGA != nil {
		in, out := &in.FPGA, &out.FPGA
		*out = make([]N3000Fpga, len(*in))
		copy(*out, *in)
	}
	if in.Fortville != nil {
		in, out := &in.Fortville, &out.Fortville
		*out = new(N3000Fortville)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000NodeSpec.
func (in *N3000NodeSpec) DeepCopy() *N3000NodeSpec {
	if in == nil {
		return nil
	}
	out := new(N3000NodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *N3000NodeStatus) DeepCopyInto(out *N3000NodeStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FPGA != nil {
		in, out := &in.FPGA, &out.FPGA
		*out = make([]N3000FpgaStatus, len(*in))
		copy(*out, *in)
	}
	if in.Fortville != nil {
		in, out := &in.Fortville, &out.Fortville
		*out = make([]N3000FortvilleStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new N3000NodeStatus.
func (in *N3000NodeStatus) DeepCopy() *N3000NodeStatus {
	if in == nil {
		return nil
	}
	out := new(N3000NodeStatus)
	in.DeepCopyInto(out)
	return out
}
