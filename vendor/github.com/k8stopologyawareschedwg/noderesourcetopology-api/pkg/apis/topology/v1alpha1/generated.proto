/*
Copyright 2021 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This package imports things required by build scripts, to force `go mod` to see them as dependencies

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package v1alpha1;

import "k8s.io/apimachinery/pkg/api/resource/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/k8stopologyawareschedwg/noderesourcetopology-api/pkg/apis/topology/v1alpha1";

// AttributeInfo contains one attribute of a Zone.
// +protobuf=true
message AttributeInfo {
  optional string name = 1;

  optional string value = 2;
}

// CostInfo describes the cost (or distance) between two Zones.
// +protobuf=true
message CostInfo {
  optional string name = 1;

  optional int64 value = 2;
}

// ResourceInfo contains information about one resource type.
// +protobuf=true
message ResourceInfo {
  // Name of the resource.
  optional string name = 1;

  // Capacity of the resource, corresponding to capacity in node status, i.e.
  // total amount of this resource that the node has.
  optional k8s.io.apimachinery.pkg.api.resource.Quantity capacity = 2;

  // Allocatable quantity of the resource, corresponding to allocatable in
  // node status, i.e. total amount of this resource available to be used by
  // pods.
  optional k8s.io.apimachinery.pkg.api.resource.Quantity allocatable = 3;

  // Available is the amount of this resource currently available for new (to
  // be scheduled) pods, i.e. Allocatable minus the resources reserved by
  // currently running pods.
  optional k8s.io.apimachinery.pkg.api.resource.Quantity available = 4;
}

// Zone represents a resource topology zone, e.g. socket, node, die or core.
// +protobuf=true
message Zone {
  optional string name = 1;

  optional string type = 2;

  optional string parent = 3;

  repeated CostInfo costs = 4;

  repeated AttributeInfo attributes = 5;

  repeated ResourceInfo resources = 6;
}

