# The fedora version used should provide the golang version that matches $GOVERSION
FROM quay.io/fedora/fedora:43-x86_64

ENV GOPATH /go
ENV GOBIN /go/bin
ENV GOCACHE /go/.cache
# This should match the version in go.mod
ENV GOVERSION=1.22
ENV PATH=$PATH:$GOBIN
ARG GO_PACKAGE_PATH=github.com/openshift-kni/cnf-features-deploy

# rpms required for building and running test suites
RUN dnf -y install \
    jq \
    git \
    make \
    gettext \
    which \
    skopeo \
    findutils \
    gcc \
    golang \
    python2 \
    diffutils \
    && dnf clean all

RUN mkdir ~/bin && \
    # Print go version installed from fedora package
    go version && \
    # get required golang tools and OC client
    go install github.com/onsi/ginkgo/v2/ginkgo@v2.15.0 && \
    go install golang.org/x/lint/golint@latest && \
    go install github.com/lack/mcmaker@v0.0.7 && \
    export latest_oc_client_version=$(curl https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/ 2>/dev/null | grep -o \"openshift-client-linux-4.*tar.gz\" | tr -d \") && \
    curl -JL https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/${latest_oc_client_version} -o oc.tar.gz && \
    tar -xzvf oc.tar.gz && \
    mv oc /usr/local/bin/oc && \
    ln -s /usr/local/bin/oc /usr/local/bin/kubectl && \
    rm -f oc.tar.gz

RUN export TMP_BIN=$(mktemp -d) && \
    mv $GOBIN/* $TMP_BIN/ && \
    rm -rf ${GOPATH} ${GOCACHE} && \
    mkdir -p ${GOPATH}/src/${GO_PACKAGE_PATH}/ && \
    mkdir -p ${GOBIN} && \
    chmod -R 775 ${GOPATH} && \
    mv $TMP_BIN/* ${GOBIN} && \
    rm -rf $TMP_BIN

WORKDIR ${GOPATH}/src/${GO_PACKAGE_PATH}

ENTRYPOINT [ "/bin/bash" ]
